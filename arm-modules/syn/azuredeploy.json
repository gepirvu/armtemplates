{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for your deployment."
        }
      },
      "allowAllConnections": {
        "type": "bool"
      },
      "sparkDeployment": {
        "type": "bool",
        "metadata": {
          "description": "'True' deploys an Apache Spark pool. 'False' does not deploy an Apache Spark pool."
        }
      },
      "sparkNodeSize": {
        "type": "string",
        "defaultValue": "Medium",
        "allowedValues": [
          "Small",
          "Medium",
          "Large"
        ],
        "metadata": {
          "description": "This parameter will determine the node size if SparkDeployment is true"
        }
      },
      "environment": {
        "type": "string",
        "defaultValue": "d",
        "metadata": {
          "description": "Development environment"
        }
      },
      "sku": {
        "type": "string",
        "defaultValue": "DW100c",
        "allowedValues": [
          "DW100c",
          "DW200c",
          "DW300c",
          "DW400c",
          "DW500c",
          "DW1000c",
          "DW1500c",
          "DW2000c",
          "DW2500c",
          "DW3000c"
        ],
        "metadata": {
          "description": "Select the SKU of the SQL pool."
        }
      },
      "metadataSync": {
        "type": "bool",
        "defaultValue": false,
        "metadata": {
          "description": "Choose whether you want to synchronise metadata."
        }
      },
      "dlsDeployment": {
          "type": "bool",
          "metadata": {
              "description": "'True' deploys an Azure Data Lake associated to Synapse. 'False' does not deploy an Azure Data Lake."
          }
      },
      "sqlPoolDeployment": {
          "type": "bool",
          "metadata": {
              "description": "'True' deploys a dedicated SQL pool. 'False' does not deploy a dedicated SQL Pool."
          }
      },
      "dataProduct": {
          "type": "string",
          "metadata": {
              "description": "Data Product / Use Case Name"
          }
      },
      "dlsAccountUrl": {
          "type": "securestring",
          "metadata": {
              "description": "Endpoint to the Azure Data Lake"
          }
      },
      "dlsFsName": {
        "type": "string",
        "metadata": {
          "description": "Name of the referenced Azure Data Lake container"
        }
      },
      "resourceTags": {
        "type": "object"
      },
              "countryCode": {
            "type": "string",
            "defaultValue": "cs",
            "metadata": {
                "description": "country code"
            }
        }
    },
    "variables": {
      "synapseName": "[toLower(concat(parameters('countryCode'),'-',parameters('dataProduct'),'-',parameters('environment'),'-syn'))]",
      "keyVaultName": "[toLower(concat(parameters('countryCode'),'-',parameters('dataProduct'),'-',parameters('environment'),'-kv'))]",
      "dlsName": "[toLower(concat(parameters('countryCode'),'syn',parameters('dataProduct'),parameters('environment'),'dls'))]",
      "dlsFsName": "[toLower(concat(variables('dlsName'),'-fs'))]",
      "sqlPoolName": "[toLower(concat(variables('workspaceName'),'syndw'))]",
      "workspaceName": "[toLower(concat(variables('synapseName'),'ws'))]",
      "sparkPoolName": "[toLower('synspark')]",
      "sqlAdministratorLogin": "sqladmin",
      "sqlAdministratorLoginPassword": "[concat('P', uniqueString(resourceGroup().id,deployment().name,variables('workspaceName')), 'x', '!')]"
    },
    "resources": [
      {
        "condition": "[parameters('dlsDeployment')]",
        "type": "Microsoft.Storage/storageAccounts",
        "apiVersion": "2019-06-01",
        "name": "[variables('dlsName')]",
        "tags": "[parameters('resourceTags')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "Standard_LRS"
        },
        "kind": "StorageV2",
        "properties": {
          "accessTier": "Hot",
          "supportsHttpsTrafficOnly": true,
          "isHnsEnabled": true
        },
        "resources": [
          {
            "condition": "[parameters('dlsDeployment')]",
            "name": "[concat('default/', variables('dlsFsName'))]",
            "type": "blobServices/containers",
            "apiVersion": "2019-06-01",
            "dependsOn": [
              "[variables('dlsName')]"
            ],
            "properties": {
              "publicAccess": "None"
            }
          }
        ]
      },
      {
        "type": "Microsoft.Synapse/workspaces",
        "apiVersion": "2021-05-01",
        "name": "[variables('workspaceName')]",
        "tags": "[parameters('resourceTags')]",
        "location": "[parameters('location')]",
        "identity": {
          "type": "SystemAssigned"
        },
        "dependsOn": [
          "[variables('dlsFsName')]"
        ],
        "properties": {
          "defaultDataLakeStorage": {
            "accountUrl": "[parameters('dlsAccountUrl')]",
            "filesystem": "[if(parameters('dlsDeployment'),variables('dlsFsName'),parameters('dlsFsName'))]"
          },
          "sqlAdministratorLogin": "[variables('sqlAdministratorLogin')]",
          "sqlAdministratorLoginPassword": "[variables('sqlAdministratorLoginPassword')]",
          "managedResourceGroupName" : "[concat(variables('synapseName'),'managed')]",
          "managedVirtualNetwork": "default"
        },
        "resources": [
          {
            "condition": "[parameters('allowAllConnections')]",
            "type": "firewallrules",
            "apiVersion": "2019-06-01-preview",
            "name": "allowAll",
            "location": "[parameters('location')]",
            "dependsOn": [ "[variables('workspaceName')]" ],
            "properties": {
              "startIpAddress": "0.0.0.0",
              "endIpAddress": "255.255.255.255"
            }
          },
          {
            "type": "firewallrules",
            "apiVersion": "2019-06-01-preview",
            "name": "AllowAllWindowsAzureIps",
            "location": "[parameters('location')]",
            "dependsOn": [ "[variables('workspaceName')]" ],
            "properties": {
              "startIpAddress": "0.0.0.0",
              "endIpAddress": "0.0.0.0"
            }
          },
          {
            "type": "managedIdentitySqlControlSettings",
            "apiVersion": "2019-06-01-preview",
            "name": "default",
            "location": "[parameters('location')]",
            "dependsOn": [ "[variables('workspaceName')]" ],
            "properties": {
              "grantSqlControlToManagedIdentity": {
                "desiredState": "Enabled"
              }
            }
          }
        ]
      },
      {
        "condition": "[parameters('sqlPoolDeployment')]",
        "type": "Microsoft.Synapse/workspaces/sqlPools",
        "apiVersion": "2019-06-01-preview",
        "name": "[concat(variables('workspaceName'), '/', variables('sqlPoolName'))]",
        "tags": "[parameters('resourceTags')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "[parameters('sku')]"
        },
        "dependsOn": [
          "[variables('workspaceName')]"
        ],
        "properties": {
          "createMode": "Default",
          "collation": "SQL_Latin1_General_CP1_CI_AS"
        },
        "resources": [
          {
            "condition": "[parameters('metadataSync')]",
            "type": "metadataSync",
            "apiVersion": "2019-06-01-preview",
            "name": "config",
            "location": "[parameters('location')]",
            "dependsOn": [
              "[variables('sqlPoolName')]"
            ],
            "properties": {
              "Enabled": "[parameters('metadataSync')]"
            }
          }
        ]
      },
      {
        "condition": "[parameters('sparkDeployment')]",
        "type": "Microsoft.Synapse/workspaces/bigDataPools",
        "apiVersion": "2019-06-01-preview",
        "name": "[concat(variables('workspaceName'), '/', variables('sparkPoolName'))]",
        "tags": "[parameters('resourceTags')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[variables('workspaceName')]"
        ],
        "properties": {
          "nodeCount": 5,
          "nodeSizeFamily": "MemoryOptimized",
          "nodeSize": "[parameters('sparkNodeSize')]",
          "autoScale": {
            "enabled": true,
            "minNodeCount": 3,
            "maxNodeCount": 40
          },
          "autoPause": {
            "enabled": true,
            "delayInMinutes": 15
          },
          "sparkVersion": "2.4"
        }
      },
        {
            //https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/copy-resources#iteration-for-a-child-resource
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2021-04-01-preview",
            "name": "[concat(variables('keyVaultName'),'/','azureSynSqlPwd')]",
            "location": "[parameters('location')]",
            "properties": {
                "value": "[variables('sqlAdministratorLoginPassword')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces/sqlPools', variables('workspaceName'), variables('sqlPoolName'))]"
            ]
        },
        {
            //https://docs.microsoft.com/en-us/azure/azure-resource-manager/templates/copy-resources#iteration-for-a-child-resource
            "type": "Microsoft.KeyVault/vaults/secrets",
            "apiVersion": "2021-04-01-preview",
            "name": "[concat(variables('keyVaultName'),'/','azureSynSqlUser')]",
            "location": "[parameters('location')]",
            "properties": {
                "value": "[variables('sqlAdministratorLogin')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Synapse/workspaces/sqlPools', variables('workspaceName'), variables('sqlPoolName'))]"
            ]
        }
    ],
    "outputs": {
        "synapsePrincipalId": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Synapse/workspaces', variables('workspaceName')), '2019-06-01-preview', 'Full').identity.principalId]"
        },
        "synapseWorkSpaceName": {
            "type": "string",
            "value": "[variables('workspaceName')]"
        }
    }
  }
  