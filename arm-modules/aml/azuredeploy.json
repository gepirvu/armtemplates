{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specifies the location for workspace."
      }
    },
    "amlManagedIdentityOption": {
      "type": "string",
      "defaultValue": "SystemAssigned",
      "allowedValues": [
        "SystemAssigned",
        "UserAssigned",
        "None",
        "SystemAssigned, UserAssigned"
      ],
      "metadata": {
        "description": "Specifies the identity type of the Azure Machine Learning workspace."
      }
    },
    "resourceTags": {
      "type": "object"
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS",
        "Standard_GZRS",
        "Standard_RAGZRS"
      ]
    },
    "containerRegistrySku": {
      "type": "string",
      "defaultValue": "Premium",
      "allowedValues": [
        "Basic",
        "Standard",
        "Premium"
      ]
    },
    "containerRegistryBehindVNet": {
      "type": "bool",
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Determines whether or not to put container registry behind VNet."
      }
    },
    "confidential_data": {
      "type": "string",
      "defaultValue": "false",
      "allowedValues": [
        "false",
        "true"
      ],
      "metadata": {
        "description": "Specifies that the Azure Machine Learning workspace holds highly confidential data."
      }
    },
    "allowPublicAccessWhenBehindVnet": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "description"
      }
    },
    "storageAccountBehindVNet": {
      "type": "bool",
      "allowedValues": [
        true,
        false
      ],
      "metadata": {
        "description": "Determines whether or not to put the storage account behind VNet"
      }
    },
    "environment": {
      "type": "string",
      "defaultValue": "d",
      "metadata": {
        "description": "Development environment"
      }
    },
    "dataProduct": {
      "type": "string",
      "metadata": {
        "description": "Use Case name"
      }
    },
    "crManagedIdentityOption": {
      "type": "string",
      "defaultValue": "None",
      "allowedValues": [
        "SystemAssigned",
        "UserAssigned",
        "None",
        "SystemAssigned, UserAssigned"
      ],
      "metadata": {
        "description": "Determines whether or not to activate the managed identity of the azure container registry."
      }
    },
    "countryCode": {
      "type": "string",
      "defaultValue": "cs",
      "metadata": {
        "description": "country code"
      }
    }
  },
  "variables": {
    "machineLearningWorkspaceName": "[toLower(concat(parameters('countryCode'),'-',parameters('dataProduct'),'-',parameters('environment'),'-aml'))]",
    "machineLearningWorkspaceNameResourceId": "[resourceId(resourceGroup().name,'Microsoft.MachineLearningServices/workspaces',variables('machineLearningWorkspaceName'))]",
    "adbWorkSpaceName": "[toLower(concat(parameters('countryCode'),'-',parameters('dataProduct'),'-',parameters('environment'),'-dbr'))]",
    "storageAccountName": "[toLower(concat(parameters('countryCode'),parameters('dataProduct'),'aml',parameters('environment'),'sacc'))]",
    "containerRegistryName": "[toLower(concat(parameters('countryCode'),parameters('dataProduct'),parameters('environment'),'cr'))]",
    "applicationInsightsName": "[toLower(concat(parameters('countryCode'),'-',parameters('dataProduct'),'-',parameters('environment'),'ai'))]",
    "keyVaultName": "[toLower(concat(parameters('countryCode'),'-dp-',parameters('dataProduct'),'-',parameters('environment'),'-kv'))]",
    "adbBeSnetName": "[concat(parameters('dataProduct'),'-be-',parameters('environment'),'-dbr','-snet')]",
    "adbFeSnetName": "[concat(parameters('dataProduct'),'-fe-',parameters('environment'),'-dbr','-snet')]",
    "computeSnetName": "[concat(parameters('dataProduct'),'-compute-',parameters('environment'),'-snet')]",
    "vnetName": "[concat(parameters('dataProduct'),'-',parameters('environment'),'-vnet')]",
    "storageAccount": "[resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
    "keyVault": "[resourceId(resourceGroup().name, 'Microsoft.KeyVault/vaults', variables('keyVaultName'))]",
    "containerRegistry": "[resourceId(resourceGroup().name, 'Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]",
    "applicationInsights": "[resourceId(resourceGroup().name, 'Microsoft.Insights/components', variables('applicationInsightsName'))]",
    "computeSubnet": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('computeSnetName'))]",
    "adbWorkspace": "[resourceId(resourceGroup().name, 'Microsoft.Databricks/workspaces', variables('adbWorkSpaceName'))]",
    "adbFeSubnet": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('adbFeSnetName'))]",
    "adbBeSubnet": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks/subnets', variables('vnetName'), variables('adbBeSnetName'))]",
    "networkRuleSetDefault": {
      "defaultAction": "Allow",
      "bypass": "AzureServices"
    },
    "networkRuleSetCrDefault": {
      "defaultAction": "Allow",
      "publicNetworkAccess": "Enabled"
    },
    "networkRuleSetBehindVNet": {
      "resourceAccessRules": [
        {
          "tenantId": "[subscription().tenantId]",
          "resourceId": "[variables('machineLearningWorkspaceNameResourceId')]"
        }
      ],
      "defaultAction": "deny",
      "bypass": "AzureServices",
      "virtualNetworkRules": [
        {
          "action": "Allow",
          "id": "[variables('computeSubnet')]"
        },
        {
          "action": "Allow",
          "id": "[variables('adbFeSubnet')]"
        },
        {
          "action": "Allow",
          "id": "[variables('adbBeSubnet')]"
        }
      ]
    },
    "azAppInsightsLocationMap": {
      "eastasia": "eastasia",
      "southeastasia": "southeastasia",
      "centralus": "westcentralus",
      "eastus": "eastus",
      "eastus2": "eastus2",
      "westus": "westus",
      "northcentralus": "northcentralus",
      "southcentralus": "southcentralus",
      "northeurope": "northeurope",
      "westeurope": "westeurope",
      "japanwest": "japanwest",
      "japaneast": "japaneast",
      "brazilsouth": "brazilsouth",
      "australiaeast": "australiaeast",
      "australiasoutheast": "australiasoutheast",
      "southindia": "southindia",
      "centralindia": "centralindia",
      "westindia": "westindia",
      "canadacentral": "canadacentral",
      "canadaeast": "canadaeast",
      "uksouth": "uksouth",
      "ukwest": "ukwest",
      "francecentral": "francecentral",
      "westcentralus": "southcentralus",
      "westus2": "westus2",
      "koreacentral": "koreacentral",
      "koreasouth": "koreasouth",
      "eastus2euap": "southcentralus",
      "centraluseuap": "southcentralus",
      "usgovarizona": "usgovarizona",
      "usgovvirginia": "usgovvirginia",
      "chinaeast2": "chinaeast2"
    },
    "appInsightsLocation": "[variables('azAppInsightsLocationMap')[parameters('location')]]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-04-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "StorageV2",
      "dependsOn": [],
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "networkAcls": "[if(parameters('storageAccountBehindVNet'), variables('networkRuleSetBehindVNet'), variables('networkRuleSetDefault'))]"
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2019-12-01-preview",
      "name": "[variables('containerRegistryName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('containerRegistrySku')]"
      },
      "identity": {
        "type": "[parameters('crManagedIdentityOption')]"
      },
      "dependsOn": [],
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "adminUserEnabled": true,
        "networkRuleSet": "[if(parameters('containerRegistryBehindVNet'), variables('networkRuleSetBehindVNet'), variables('networkRuleSetCrDefault'))]",
        "networkRuleBypassOptions": "AzureServices"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[variables('applicationInsightsName')]",
      "location": "[variables('appInsightsLocation')]",
      "kind": "web",
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "Application_Type": "web"
      }
    },
    {
      "type": "Microsoft.MachineLearningServices/workspaces",
      "apiVersion": "2020-09-01-preview",
      "name": "[variables('machineLearningWorkspaceName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "[parameters('amlManagedIdentityOption')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]",
        "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]"
      ],
      "tags": "[parameters('resourceTags')]",
      "properties": {
        "friendlyName": "[variables('machineLearningWorkspaceName')]",
        "storageAccount": "[variables('storageAccount')]",
        "keyVault": "[variables('keyVault')]",
        "applicationInsights": "[variables('applicationInsights')]",
        "containerRegistry": "[ variables('containerRegistry')]",
        "adbWorkspace": "[variables('adbWorkSpace')]",
        "hbiWorkspace": "[parameters('confidential_data')]",
        "allowPublicAccessWhenBehindVnet": "[parameters('allowPublicAccessWhenBehindVnet')]"
      }
    }
  ],
  "outputs": {
    "amlPrincipalId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.MachineLearningServices/workspaces', variables('machineLearningWorkspaceName')), '2021-03-01-preview', 'Full').identity.principalId]"
    },
    "crPrincipalId": {
      "type": "string",
      "condition": "[equals(parameters('crManagedIdentityOption'),'SystemAssigned')]",
      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))).identity.principalId]"
    }
  }
}