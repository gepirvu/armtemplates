{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageName": {
            "type": "string"
        },
        "dataFactoryPrincipalId": {
            "type": "securestring",
            "metadata": {
                "description": "The principal to assign the role to"
            }
        },
        "dataFactoryName": {
            "type": "string",
            "metadata": {
                "description": "Name of the Azure Data Factory to set the permission for the user"
            }
        },
        "userObjectId": {
            "type": "array",
           // "defaultValue": [
           //     {
           //         "Id": "0789cf13-eb1c-4b52-8e7e-6b3e15ef18f1" //George
           //     }
           // ],
            "metadata": {
                "description": "User principals Objects with permissions."
            }
        },
         "groupObjectId": {
            "type": "array",
            //"defaultValue": [
            //    {
            //        "Id": "b902d5d2-e57e-4831-81b4-eca7557c9ca7"
            //    }
            // ],
            "metadata": {
                "description": "User principals Objects with permissions."
            }
        },
        "spObjectId": {
            "type": "securestring",
            "defaultValue": "7c595102-1d7e-493e-8c36-432344422d5b", // Service Principal cs-dte-avalon-sp
            "metadata": {
                "description": "Service principal Object Id"
            }
        },
        "synapseWorkspaceName": {
            "type": "string",
            "metadata": {
                "description": "Azure Synapse Workspace name"
            }
        },
        "synapsePrincipalId": {
            "type": "securestring",
            "metadata": {
                "description": "description"
            }
        },
        "environment": {
            "type": "string",
            "defaultValue": "d",
            "metadata": {
                "description": "Development environment"
            }
        },
        "dataProduct": {
            "type": "string",
            "metadata": {
                "description": "Use Case name"
            }
        },
        "countryCode": {
            "type": "string",
            "defaultValue": "cs",
            "metadata": {
                "description": "country code"
            }
        },
        "cosmoDeployment": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Decides to deploy or not to deploy Cosmos Db"
            }
        },
        "functionDeployment": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Decides to deploy or not to deploy Azure Function"
            }
        }
    },
    "variables": {
        "Owner": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
        "Contributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "Reader": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "StorageBlobDataContributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "StorageBlobDataReader": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '2a2b9908-6ea1-4ae2-8e65-a410df84e7d1')]",
        "LimitedUserAccessAdministrator": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '1c1a5121-f653-41a5-b049-93bcc27afe27')]",
        "DocumentDbAccountContributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '5bd9cd88-fe45-4216-938b-f97437e15450')]",
        "adbWorkSpaceName": "[toLower(concat(parameters('countryCode'),'-',parameters('dataProduct'),'-',parameters('environment'),'-dbr'))]",
        "machineLearningWorkspaceName": "[toLower(concat(parameters('countryCode'),'-',parameters('dataProduct'),'-',parameters('environment'),'-aml'))]",
        "cosmosDbAccountName": "[toLower(concat('cs-',parameters('dataProduct'),'-',parameters('environment'),'-cdb'))]",
        "functionAppName": "[concat('cs-',parameters('dataProduct'),'-',parameters('environment'),'-fa')]"
    },
    "resources": [
        {
            "condition": "[parameters('functionDeployment')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "adfRoleAssignmentToFunctionApp",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2020-04-01-preview",
                            "name": "[guid(uniqueString(resourceGroup().id,variables('functionAppName')))]", //https://winterdom.com/2018/08/02/rbac-role-assignments-in-arm-templates
                            "scope": "[concat('Microsoft.Web/sites', '/', variables('functionAppName'))]",
                            "properties": {
                                "roleDefinitionId": "[variables('Contributor')]",
                                "principalId": "[parameters('dataFactoryPrincipalId')]",
                                "principalType": "ServicePrincipal" //https://docs.microsoft.com/en-us/azure/role-based-access-control/role-assignments-template#new-service-principal
                            }
                        }
                    ]
                }
            }
        },
        {
            "condition": "[parameters('cosmoDeployment')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "adfRoleAssignmentToCosmos",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2020-04-01-preview",
                            "name": "[guid(uniqueString(resourceGroup().id,variables('cosmosDbAccountName')))]", //https://winterdom.com/2018/08/02/rbac-role-assignments-in-arm-templates
                            "scope": "[concat('Microsoft.DocumentDB/databaseAccounts', '/', variables('cosmosDbAccountName'))]",
                            "properties": {
                                "roleDefinitionId": "[variables('DocumentDbAccountContributor')]",
                                "principalId": "[parameters('dataFactoryPrincipalId')]",
                                "principalType": "ServicePrincipal" //https://docs.microsoft.com/en-us/azure/role-based-access-control/role-assignments-template#new-service-principal
                            }
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[guid(uniqueString(resourceGroup().id,parameters('dataFactoryName')))]", //https://winterdom.com/2018/08/02/rbac-role-assignments-in-arm-templates
            "scope": "[concat('Microsoft.Storage/storageAccounts', '/', parameters('storageName'))]",
            "properties": {
                "roleDefinitionId": "[variables('StorageBlobDataContributor')]",
                "principalId": "[parameters('dataFactoryPrincipalId')]",
                "principalType": "ServicePrincipal" //https://docs.microsoft.com/en-us/azure/role-based-access-control/role-assignments-template#new-service-principal
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[guid(uniqueString(resourceGroup().id,variables('adbWorkspaceName')))]", //https://winterdom.com/2018/08/02/rbac-role-assignments-in-arm-templates
            "scope": "[concat('Microsoft.Databricks/workspaces', '/', variables('adbWorkspaceName'))]",
            "properties": {
                "roleDefinitionId": "[variables('Contributor')]",
                "principalId": "[parameters('dataFactoryPrincipalId')]",
                "principalType": "ServicePrincipal" //https://docs.microsoft.com/en-us/azure/role-based-access-control/role-assignments-template#new-service-principal
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[guid(uniqueString(resourceGroup().id,parameters('synapseWorkspaceName')))]",
            "scope": "[concat('Microsoft.Storage/storageAccounts/', parameters('storageName'))]",
            "properties": {
                "roleDefinitionId": "[variables('StorageBlobDataContributor')]",
                "principalId": "[parameters('synapsePrincipalId')]",
                "principalType": "ServicePrincipal"
            }
        },
        /*{
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "copy": {
                "name": "assignment",
                "count": "[length(parameters('userObjectId'))]"
            },
            "name": "[guid(uniqueString(resourceGroup().id,parameters('userObjectId')[copyIndex('assignment')].Id))]",
            "scope": "[concat('Microsoft.Storage/storageAccounts/', parameters('storageName'))]",
            "properties": {
                "roleDefinitionId": "[variables('StorageBlobDataContributor')]",
                "principalId": "[parameters('userObjectId')[copyIndex('assignment')].Id]",
                "principalType": "User"
            }
        },*/
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "copy": {
                "name": "assignment",
                "count": "[length(parameters('groupObjectId'))]"
            },
            "name": "[guid(uniqueString(resourceGroup().id,parameters('groupObjectId')[copyIndex('assignment')].Id))]",
            "scope": "[concat('Microsoft.Storage/storageAccounts/', parameters('storageName'))]",
            "properties": {
                "roleDefinitionId": "[variables('StorageBlobDataContributor')]",
                "principalId": "[parameters('groupObjectId')[copyIndex('assignment')].Id]",
                "principalType": "Group"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[guid(uniqueString(resourceGroup().id,parameters('spObjectId')))]",
            "scope": "[concat('Microsoft.Storage/storageAccounts/', parameters('storageName'))]",
            "properties": {
                "roleDefinitionId": "[variables('StorageBlobDataContributor')]",
                "principalId": "[parameters('spObjectId')]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[guid(uniqueString(resourceGroup().id,parameters('spObjectId'),variables('adbWorkSpaceName')))]",
            "scope": "[concat('Microsoft.Databricks/workspaces/', variables('adbWorkSpaceName'))]",
            "properties": {
                "roleDefinitionId": "[variables('Contributor')]",
                "principalId": "[parameters('spObjectId')]",
                "principalType": "ServicePrincipal"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "copy": {
                "name": "assignment",
                "count": "[length(parameters('groupObjectId'))]"
            },
            "name": "[guid(uniqueString(resourceGroup().id,'1',parameters('groupObjectId')[copyIndex('assignment')].Id))]",
            "scope": "[concat('Microsoft.Databricks/workspaces/', variables('adbWorkspaceName'))]",
            "properties": {
                "roleDefinitionId": "[variables('Contributor')]",
                "principalId": "[parameters('groupObjectId')[copyIndex('assignment')].Id]",
                "principalType": "Group"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[guid(uniqueString(resourceGroup().id,variables('machineLearningWorkspaceName')))]",
            "scope": "[concat('Microsoft.MachineLearningServices/workspaces/', variables('machineLearningWorkspaceName'))]",
            "properties": {
                "roleDefinitionId": "[variables('Contributor')]",
                "principalId": "[parameters('dataFactoryPrincipalId')]",
                "principalType": "ServicePrincipal"
            }
        }
    ]
}
